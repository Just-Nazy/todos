name: Build & Deploy on Master/Main

on:
  push:
    branches:
      - master 
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      REGISTRY: docker.io
      IMAGE_NAME: monapp

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Scan de secrets avec Gitleaks
        uses: zricethezav/gitleaks-action@v2
        continue-on-error: false

      - name: Scan des vulnérabilités avec OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "todos"
          path: "./"
          format: "HTML"
          out: "dependency-check-report"

      - name: Compilation & tests
        run: |
          mvnd clean verify

      - name: Analyse SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: keytodos
          SONAR_ORGANIZATION: Just-Nazy

      - name: Vérification du Quality Gate
        uses: SonarSource/sonarcloud-quality-gate-action@master
        with:
          scanTimeout: 300
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name:  Lire et incrémenter la version
        id: versioning
        run: |
          echo "Version actuelle : $(cat version.txt)"
          old_version=$(cat version.txt)
          major=$(echo $old_version | cut -d. -f1)
          minor=$(echo $old_version | cut -d. -f2)
          new_version="$major.$((minor+1))"
          echo $new_version > version.txt
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      - name: Commit nouvelle version & tag Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add version.txt
          git commit -m " Bump version to $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push origin master --tags

      - name: Connexion à Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name:  Build Docker image
        run: |
          docker build -t $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$NEW_VERSION .
          docker tag $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$NEW_VERSION $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

      - name:  Push Docker images 
        run: |
          docker push $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$NEW_VERSION
          docker push $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest


